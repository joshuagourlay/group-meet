The purpose of this document is to track the progress of my development over several weeks and make notes on what I 
have discussed with my mentor as to what to accomplish moving forward.

*Week 1*

What I completed:
- a mock-up built using HTML and templated tailwind CSS
- introductory Jira tasks for week one completion
- scaffolding of the project and initial commits to Github

What I could have done better:
I still struggle with focus when there are so many exciting possible project ideas to consider. Why commit to this project when *this* project
idea is better. I have successfully refocused but I will document below the idea that kept me so torn during my first week development.

- Build out a GPT Action that systematically stages a higher level project descriptions into behavior driven development templates and then use
Jira API to automatically create the hypothetical tasks in Jira. The profitability on this project is very high as SaaS projects target entities
with access to high amounts of capital. It also simplifies something that often took many hours at my Capital One internship. This will be an
exciting project that I will give myself the privledge of working on after I complete this project. Behavior Driven Development is a technique
where tasks are written in a Given, When, Then format to emphasise information in a clear, testable, and business-value oriented way. Integrating it
with scrum allows for a powerful way for interdisciplinary teams to all understand the happenings of a project, from developers to testers to 
business stakeholders.

What I aim to complete next week:
- a basic login page so that I may more quickly transition to firebase integration
- firebase integration to handle user authentication
- bonus tasks:
    - Google Login API Integration
    - Github Login API Integration

*Week 2*

What I completed:
- Migrated everything over to a barebones vue.js project
- Learned the intracasies of vue.js (and javascript) at a blistering pace
- Completed the routing between my home page and login page
- Complete barebones Firebase setup which allowed for the demoing of a user sign-in

What I could have done better:
I am really proud of the work I accomplished in such a short time this week. My weakness in development is still pointing out tasks in Jira, as
I had originally assigned what I thought was 2.5 points to myself (15 hours of work) for something that really only took me like 1.5 points (9 
hours of work). I really blew out my own expectations this week and am looking forward to what I decide to do next week , which will probably 
be cleaning up my project directory, as moving fast and breaking things in the sake of learning does not lend itself well to a pretty codebase.

What I aim to complete next week:
- Cleaning up my project's file structure (0.5)
- Create Registration Page (0.5)
- Dynamically update dashboard to show when logged in (0.5)
- Bonus Tasks:
    - Google Login API Integration (0.5)
    - Github Login API Integration (0.5)

*Week 3*

What I completed:
- Removed old boilerplate code used in project creation
- Created Registration page
- Made minor improvements to the Login page
- Integrated user creation into the registion page logic using Firebase

What I could have done better:
This week I struggled a bit with getting back into the swing of coding with vue, but I know it'll get better with time. I ran into an issue
I wasn't running npm run serve in the right directory and getting some really confusing errors. I didn't realize I had my project 2 folders
deep instead of one. Regardless, I'm really excited about the work I did this week. I learned a lot and got a lot of hands on practice with 
frontend development.

What I aim to complete next week:
- Important: Ensure secrets are kept in an environment file so that the project updates can be safely integrated with source control (0.25)
- Finish dynamically updating user dashboard to show when logged in (0.5)
- Implement user logout features (0.25) (depends on above)
- Give thought to how and what we will be storing in our database (to be determined as scope is fleshed out)
    - Pages and things surrounding the lifecycle creation and searching of events

* Week 4 *

What I completed:
- Dynamically render signin and signout states
- incorporate vuex for global state management across files
- create boilerplate lambda function for backend server proxy that controls api requests and accesses AWS secrets manager
- planned out the future functionality of the application to focus on organizing running events

What I could have done better: 
I completed and learned a lot this week. I learned more about global state management in vue using vuex and planned out
the inital functionality regarding how I'd like the app to organize running events. That said, in all my excitement I lost
focus on whats truly important for getting to the point where I can add all the cool features I want. If there's anything
for me to improve on, it's staying focused and keeping in mind what is holistically needed to have the application running
not just from the perspective of a user, but from the perspective as a developer as well.

What I aim to complete next week:
- Complete secrets manager backend (2)
    - AWS Secrets Manager Setup (0.25)
    - Firebase API Key Retrival function (0.25)
    - Models.py filled with any appropriate classes (0.25)
    - Lambda properly configured and ready to send back responses (1)
    - API Gateway is utilized to allow requests to be made via an endpoint (0.25)
- Bonus Tasks
    - Create Page for Event Creation (0.25)
    - Setup Database that Stores All Details Surrounding Event Creation (2)

* Week 5 *

Became ill - Sprint extended to week 6

* Week 6 *

What I completed:
- Initialized secrets manager connection through lambda
- Created relevant classes in models.py
    - Created a Singleton Class to facilitate faster lambda start up times from a shared container across mutliple invocations
    - Created a Secrets object that uses the Singleton class as a metaclass and initializes it upon start

What I aim to complete next week:
- Setting up the Database in Firebase
    Tasks to be completed fast and soon:
        - Manually Enter One Sample Data Event (Think about what fields or what I'd like to store about the event)
        - Retrieve the data programmatically
- Event Details Page
- Events Creation Page
    - Boilerplate
    - Storing in database

* Week 7 *

What I completed:
- Troubleshooted various things regarding my prod lambda:
    - Added a missing resource policy which prevented me from accessing secrets manager
    - Fixed issues regarding trying to read data in the format of the 1.0 API Gateway event partitioning format vs 2.0 HTTP format
    - Reconfigured the structure of services/secrets_manager to be encapsulated by models/models.py because importing from one subdirectory
    to another goes against lambda's rules
    - Reconfigured API Gateway to allow for a properly configured CORS and proper usage of path parameters
    - Read through many cloudwatch logs to identify various bugs and issues along the way

What I aim to complete next week:
- All week 6 tasks must be carried over and are listed below:
- Setting up the Database in Firebase
    Tasks to be completed fast and soon:
        - Manually Enter One Sample Data Event (Think about what fields or what I'd like to store about the event)
        - Retrieve the data programmatically
- Event Details Page
- Events Creation Page
    - Boilerplate
    - Storing in database

* Week 8 *

- Notes: 

 - Still need to integrate links to new pages from home page
    - Integrate into home page
- Search thru events
    - Summary view
    - Considerations on home I'm organizing thing (cards?)
    - Search Page
    - We talked about maybe adding tags to help make documents more searchable
    - Map Integration (Huge Wish list)
    - We talked about how to incorporate filtering and searching
    - Sync Location with user

Primary concerns:
    - Retrieving all by location and displaying them by date asc
