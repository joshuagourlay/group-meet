The purpose of this document is to track the progress of my development over several weeks and make notes on what I 
have discussed with my mentor as to what to accomplish moving forward.

*Week 1*

What I completed:
- a mock-up built using HTML and templated tailwind CSS
- introductory Jira tasks for week one completion
- scaffolding of the project and initial commits to Github

What I could have done better:
I still struggle with focus when there are so many exciting possible project ideas to consider. Why commit to this project when *this* project
idea is better. I have successfully refocused but I will document below the idea that kept me so torn during my first week development.

- Build out a GPT Action that systematically stages a higher level project descriptions into behavior driven development templates and then use
Jira API to automatically create the hypothetical tasks in Jira. The profitability on this project is very high as SaaS projects target entities
with access to high amounts of capital. It also simplifies something that often took many hours at my Capital One internship. This will be an
exciting project that I will give myself the privledge of working on after I complete this project. Behavior Driven Development is a technique
where tasks are written in a Given, When, Then format to emphasise information in a clear, testable, and business-value oriented way. Integrating it
with scrum allows for a powerful way for interdisciplinary teams to all understand the happenings of a project, from developers to testers to 
business stakeholders.

What I aim to complete next week:
- a basic login page so that I may more quickly transition to firebase integration
- firebase integration to handle user authentication
- bonus tasks:
    - Google Login API Integration
    - Github Login API Integration

*Week 2*

What I completed:
- Migrated everything over to a barebones vue.js project
- Learned the intracasies of vue.js (and javascript) at a blistering pace
- Completed the routing between my home page and login page
- Complete barebones Firebase setup which allowed for the demoing of a user sign-in

What I could have done better:
I am really proud of the work I accomplished in such a short time this week. My weakness in development is still pointing out tasks in Jira, as
I had originally assigned what I thought was 2.5 points to myself (15 hours of work) for something that really only took me like 1.5 points (9 
hours of work). I really blew out my own expectations this week and am looking forward to what I decide to do next week , which will probably 
be cleaning up my project directory, as moving fast and breaking things in the sake of learning does not lend itself well to a pretty codebase.

What I aim to complete next week:
- Cleaning up my project's file structure (0.5)
- Create Registration Page (0.5)
- Dynamically update dashboard to show when logged in (0.5)
- Bonus Tasks:
    - Google Login API Integration (0.5)
    - Github Login API Integration (0.5)

*Week 3*

What I completed:
- Removed old boilerplate code used in project creation
- Created Registration page
- Made minor improvements to the Login page
- Integrated user creation into the registion page logic using Firebase

What I could have done better:
This week I struggled a bit with getting back into the swing of coding with vue, but I know it'll get better with time. I ran into an issue
I wasn't running npm run serve in the right directory and getting some really confusing errors. I didn't realize I had my project 2 folders
deep instead of one. Regardless, I'm really excited about the work I did this week. I learned a lot and got a lot of hands on practice with 
frontend development.

What I aim to complete next week:
- Important: Ensure secrets are kept in an environment file so that the project updates can be safely integrated with source control (0.25)
- Finish dynamically updating user dashboard to show when logged in (0.5)
- Implement user logout features (0.25) (depends on above)
- Give thought to how and what we will be storing in our database (to be determined as scope is fleshed out)
    - Pages and things surrounding the lifecycle creation and searching of events

